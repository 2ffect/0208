1. 삭제 구현
어제 추가하는 것을 구현 했다면 오늘은 추가한 것들을 삭제하는 것을 구현한다.
삭제는 ToDo.jsx 파일에 버튼과 이벤트 코드를 추가하여 구현해보도록 한당.

2) 삭제를 처리할 메서드를 App.js파일에 생성한다.
App.js에 생성한 메서드를

4) 실제 서버 데이터를 가져오기
 -  App.js 파일에서 범위 데이터 삭제

CORS(Cross-Origin Resource Sharing, 교차 출처 리소스 공유)
  >  서버와 클라이언트를 따로 구성하였을 때 클라이언트에서 서버의 데이터를 가져오는 법.
 이때까지 하면 서버는 Django를 통해 구성을 했고, 클라이언트는 React를 통해 구성했다.
서버에 저장 된 데이터를 불러오는 것을 해보도록 하자.

0129에 작업했던 ToDoService의 BackEnd와, 어제 오늘 작업한 todo_react_app 을 동시 활용한다.
우선 todo_react_app의 App.js 파일에 화면이 보여질 때 호출되는 수명주기 함수를 추가한다.

  // 화면이 보여질 때 마다 호출되는 수명주기 함수
  componentDidMount(){
    // ajax 요청 객체 생성
    let request =  new XMLHttpRequest();
    // 요청 준비
    request.open('GET', "http://127.0.0.1/todo/?userid=david");
    // 요청
    request.send('');
    // 응답처리
    request.addEventListener('load', () => {
      // json 데이터 출력
      console.log(request.responseText)
    })
  }

  >  클라이언트 애플리케이션을 구동 후 localhost:3000에 접속 후 검사창을 켜 에러메세지 확인
CORS Policy 에러 출력

  > SOP (동일 출처 정책)
ajax나 fetch api는 브라우저의 동일 출처 정책에 따라 자신과 동일한 도메인의 데이터만 받아 올 수 있다. 동일 도메인이란, IP주소와 포트번호까지를 의미한다.
현재 서버 애플리케이션은 127.0.0.1:80으로 구동중이고, 클라이언트 애플리케이션은 localhost:3000으로 구동중이라 포트번호가 달라 데이터를 가져올 수 없는 것이다.

  >  해결책
서버 애플리케이션에서 요청이 가능한 클라이언트 애플리케이션의 도메인을 등록해주어야 한다.
서버 애플리케이션을 만들 때 CORS 설정을 확인해 두어야 한다.

React의 경우 react의 설정 파일에 설정을 해도 CORS 설정이 가능하다.
react는 node.js 플랫폼 위에서 동작을 하는데 node.js 는 C/C++ 이기 때문에 proxy를 이용해 react에 데이터를 넘겨줄 수 있기 때문이다


3) Django의 CORS 설정.01

**Tableau
1. 개요
  -  데이터 분석 및 시각화를 담당하는 Business Intellijence 솔루션으로 현재 MS의 POWER BI와 더불어서 가장 많이 사용되는 BI 솔루션이다.
태블로나 POWER BI는 사람들이 데이터를 보고 이해할 수 있도록 도와주는 애플리케이션

** BI : 비지니스를 운영하면서 얻은 데이터를 수집, 저장, 분석하여 성과를 최적화하는 프로세스와 방법을 망라하는 포괄적인 용어

1) 태블로는 인사이트 도출을 위한 필수도구
  -  데이터 시각화와 분석에 특화된 도구로 대시보드와 반응형 기술을 활용해 데이터 분석 및 해석이 용이하고 이상치 탐지도 쉬운편이다. 

  vs 엑셀
데이터 처리 속도가 태블로가 월등히 빠르다
데이터의 업데이트를 엑셀은 수동으로 하지만 태블로는 스케줄 기능을 활용해 주기적으로 가능하다
시각화 측면에서는 엑셀에는 대시보드(여러개의 컴포넌트를 묶어서 출력) 기능이 없지만 태블로는 대시보드 기능이 있다.
커뮤니티 기능은 엑셀과 태블로 둘 다 있으나, 엑셀의 경우 대부분 함수나 계산식의 활용 또는 매크로를 위한 도구가 많지만 태블로는 시각화에 대한 내용이 많다.

2) 간편한 데이터 연결 및 전처리
 [1] 태블로는 여러 종류의 데이터 연결을 지원한다.
 [2] Tableau Prep Builder 를 사용하면 데이터 전처리 작업 수행이 가능하다.

3) 학습하기가 쉬움

4) 태블로 커뮤니티
 [1] 메이크오버 먼데이
 [2] 태블로 위키

5) 제품
 [1] Tableau Desktop
  -  On-Premise( 기업 내부 - 인터넷을 이용하지 않는 ) 또는 Cloud에 저장 된 데이터 원본을 직접 연결해서 분석 할 수 있는 환경을 제공

 [2] Tableau Prep : 데이터 처리 플랫폼 

 [3] Tableau Public : 무료지만 기능 제한이 있다.


6) 활용 가능한 데이터
 [1] 엑셀
 [2] 텍스트 파일 : txt, csv, tsv, json
 [3] 거의 모든 관계형 데이터베이스
 [4] 공간 파일(Shape File)[위도나 경도가 포함 된 파일] : kml, shp, tab, mif 등
 [5] 통계 관련 프로그램 : sav, sas7bdat 등
 [6] R의 데이터 : rad, rdata
 [7] OLAP(On Line Analytical Processing / 온라인 분석 처리)의 데이터 원본 - 데이터베이스
 [8] Snowflake 와 Redshift 같은 클라우드 기반의 데이터 원본
 [9] hyper 파일 : tableau의 인메모리 데이터
 [10] tde 파일 : 데이터 및 로그파일을 암호화 한 파일

7) 설치
데스크탑 평가판 다운로드 : https://www.tableau.com/ko-kr/products/desktop/download



2. 기본 사용
1)데이터 가져오기
  -  프로그램을 시작한 후 왼쪽 패널에서 원하는 종류의 데이터 연결을 선택하고 옵션을 작성
  -  프로그램 실행 도중에는 [데이터] - [새 데이터 원본]을 선택하고 연결한다.
  -  주문 시트를 사용할 수 있도록 추가

2) 기본 UI
  -  Workbook Name : 문서 이름이 나오는 영역
  -  메뉴 표시줄
  -  ToolBar
  -  SideBar
 데이터와 분석탭으로 나누어져 있고 선택한 그래프 영역에 따라 메뉴가 변경
 데이터 탭은 데이터의 필드, 이름이 표시가 되는데 측정값(수치 데이터)과 차원(수치 데이터 이외의 데이터로 범주로 사용)으로 분리되어 있음

  >  선반과 카드 : 페이지, 필터, 마크 카드로 구성
 [1] 페이지 카드 : 데이터를 애니메이션으로 출력하고자 할 때 사용
 [2] 필터 카드 : 데이터를 필터링하고자 할 때 사용
 [3] 마크 카드 : 크기, 레이블, 색상 등의 세부 정보를 수정하고자 할 때 사용

  >  열 및 행, 선반 : 데이터 필드를 드래그 앤 드랍해서 차트를 생성하는데 일반적으로 범주를 설정하기 위해서 1개 이상의 차원을 배치하고 그래프를 그리기 위해 1개 이상의 측정값을 배치한다.

  >  뷰 : 그래프 표시 영역

3) [대분류] 별 [매출] 의 합계를 그래프로 확인
  >  대분류 필드를 열로 매출필드를 행으로 설정

  >  그래프의 색상 변경 
  -  색상을 변경하고자 하는 필드를 색상 선반으로 드래그 앤 드랍을 하고 색상 버튼을 다시 눌러서 원하는 색상을 지정할 수 있다.

  >  그래프에 항목 명이나 값을 출력하고자 하는 경우 필드를 레이블 선반으로 드래그 앤 드랍하면 된다.

  >  차트 영역의 세부 조정을 하고자 할 때는 영역을 선택하고 마우스 오른쪽 버튼을 눌러 [서식] 메뉴를 이용하면 된다.

4) 현재 존재하는 필드를 가지고 새로운 필드를 생성해서 출력 - [계산된 필드]
  >  사이드바에서 마우스 오른쪽 버튼 눌러 [계산된 필드 만들기] 선택하거나 메뉴에서 [분석] - [계산된 필드 만들기]를 선택해도 된다.
  >  수익률이라는 필드를 (수익의 합계/ 매출의 합계)로 생성
 계산식 : SUM([수익])/SUM([매출])

5) 매개변수를 만들어 여러 항목을 골라서 보기
  >  사이드바의 빈 영역에서 마우스 우클릭을 통해 [매개변수 만들기]를 선택하고 매개변수 이름을 설정한 뒤 [속성] - [데이터 유형]을 [문자열]로 변경한다. 그리고 하단의 [허용 가능한 값] 에서 목록을 선택한 후 보여주고자 하는 데이터 필드의 이름 [매출, 수익률]을 입력한다.

이렇게 하면 콤보박스가 만들어져 매출이나 수익률이라는 항목을 선택할 수 있다.
매개변수는 선택할 수 있는 목록을 만든것이지 실제 출력하는 항목을 만든것은 아니다.
매개변수를 만들면 계산된 필드 만들기를 이용해서 조건식을 만들어 주어야 한다.

  >  매개변수를 활용하기 위한 계산된 필드를 생성
이름(매출 또는 수익률 선택)을 입력하고 내용을 아래처럼 작성

CASE [매출 및 수익률]

WHEN '매출' THEN SUM([매출])
WHEN '수익률' THEN [수익률]

END

  -  CASE에 있는 매출 및 수익률은 매개변수 이름이고 WHEN '매출'과 '수익률'은 매개변수에서 만든 항목의 이름이다. THEN 뒤는 실제 출력할 내용이다.

  >  생성한 필드를 행 선반에 배치하고 레이블에도 배치한다.

  >  데이터를 원본에서 [매출 및 수익률]이라는 매개변수를 선택하고 마우스 우클릭 후 [매개변수 표시]를 선택하면 오른쪽의 범례 밑에 콤보 박스가 만들어진다.

6) 불연속형 필드와 연속형 필드
  >  불연속형 필드
  -  이산적인 값(값의 중간에 아무것도 없을 수 있는 데이터, 디지털)을 갖는 필드
 문자열은 불연속형 필드이지만 날짜나 숫자는 불연속형이 될 수 도 있고 연속형이 될 수 도 있다.
불연속형 필드는 행 선반이나 열 선반에 놓이게 되면 머리글이 생성되고 색상에 사용할 경우 각가의 값 별로 다른 색상을 적용 할 수 있다. 범주형(Category)라고 한다.

  >  연속형 필드
  -  날짜나 숫자 데이터에서 처음부터 끝까지 연속적으로 흐르는 값
 행이나 열에서 축을 정의한다.

  >  날짜 데이터의 경우 연속형인지 불연속형인지 선택을 잘 해야한다.
(월별로 구분(불연속), 추세(연속) 등)


3. 라인 차트
 1) 개요
  -  추세를 파악하는 것이 쉽기 때문에 시계열 데이터를 시각화 할 때 주로 사용
시계열 데이터를 X축에 놓고 측정값을 Y축에 배치한다.

 2) 대분류 별 매출일자의 년도별 추세를 확인
 [1] 새로운 시트를 선택
 [2] 마크 카드에서 차트의 모양을 라인으로 선택
 [3] 주문 날짜를 열 선반으로 드래그
  -  주문 날짜를 월 별로 알아보기 위해 표시 형식을 월 단위로 변경한다. 열 선반에 배치된 주문 날짜 탭의 삼각형 메뉴를 눌러 월을 선택해준다.
추세를 보기 위해 불연속형을 연속형으로 변경 선택해준다.

 [4] 매출을 행 선반으로 드래그
 [5] [대분류] 별로 색상을 구분 - 대분류 별 매출의 합계 추세를 확인
대분류 필드를 열 선반에 배치하면 대분류 필드별로 그래프를 작성
대분류 필드를 색상 선반에 배치하면 하나의 그래프 안에서 각각의 라인차트를 생성함
상하로 각가의 대분류를 별로도 출력하고자 하는 경우에는 대분류 필드를 행 선반에 추가해주면 된다.




